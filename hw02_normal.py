#__author__ = "Кравченко Сергей Иванович"

# Задача-1:
# Дан список, заполненный произвольными целыми числами, получите новый список,
# элементами которого будут квадратные корни элементов исходного списка,
# но только если результаты извлечения корня не имеют десятичной части и
# если такой корень вообще можно извлечь
# Пример: Дано: [2, -5, 8, 9, -25, 25, 4]   Результат: [3, 5, 2]

import math;


def prepare_list(lst):
    res = []
    for i in lst:
        if i >= 0:
            j = math.sqrt(i)
            if int(j) == j: res.append(int(j))
    return res


# Задача-2: Дана дата в формате dd.mm.yyyy, например: 02.11.2013.
# Ваша задача вывести дату в текстовом виде, например: второе ноября 2013 года.
# Склонением пренебречь (2000 года, 2010 года)

def prepare_date(date_):
    def make_dates():
        res = ("первое, второе, третье, четвертое, пятое, шестое, седьмое, восьмое, девятое, десятое, " + \
               "одиннадцатое, двенадцатое, тринадцатое, четырнадцатое, пятнадцатое, шестнадцатое, семнадцатое, " + \
               "восемнадцатое, девятнадцатое, двадцатое").split(", ")
        for i in range(9):
            res.append("двадцать " + res[i])
        res.append("тридцатое")
        for i in range(3):
            res.append("тридцать " + res[i])
        return res

    MONTHS = "января, февраля, марта, апреля, мая, июня, июля, августа, сентября, октября, ноября, декабря".split(", ")
    DATES = make_dates()
    d = date_.split(".")
    return "{} {} {} года".format(DATES[int(d[0]) - 1], MONTHS[int(d[1]) - 1], d[2])



# Задача-3: Напишите алгоритм, заполняющий список произвольными целыми числами
# в диапазоне от -100 до 100. В списке должно быть n - элементов.
# Подсказка:
# для получения случайного числа используйте функцию randint() модуля random

import random


def get_random_list(n):
    return [random.randint(-100, 100) for i in range(n)]


# Задача-4: Дан список, заполненный произвольными целыми числами
# Получите новый список, элементами которого будут только уникальные элементы исходного
# Например, lst = [1,2,4,5,6,2,5,2], нужно получить lst2 = [1,4,6]

def get_unique(lst):
    res=[]
    counts = {}
    keys = []
    for i in lst:
        if i in keys:
            counts[i] += 1
        else:
            keys.append(i)
            counts[i] = 1
    for i in counts:
        if counts[i] == 1: res.append(i)
    return res





# Задача-4: Дан список, заполненный произвольными целыми числами.
# Получите новый список, элементами которого будут: 
# а) неповторяющиеся элементы исходного списка:
# например, lst = [1, 2, 4, 5, 6, 2, 5, 2], нужно получить lst2 = [1, 2, 4, 5, 6]
# б) элементы исходного списка, которые не имеют повторений:
# например, lst = [1 , 2, 4, 5, 6, 2, 5, 2], нужно получить lst2 = [1, 4, 6]

lst = [1, 2, 4, 5, 6, 2, 5, 2]
lst1 = set(lst)
lst1 = list(lst1)
print(lst1)

lst2 = [x for x in lst if not lst.count(x) > 1]
print(lst2)

